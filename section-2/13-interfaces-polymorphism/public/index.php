<?php

require_once __DIR__ . '/../vendor/autoload.php';

$service = new \App\DebtCollectionService();

echo $service->collectDebt(new \App\CollectionAgency()) . PHP_EOL;

echo $service->collectDebt(new \App\Rocky()) . PHP_EOL;


// Полиморфизм может быть реализован не только с помощью интерфейсов, но и с помощью абстрактных классов

// Абстрактный класс:                               // Интерфейс:
// - может иметь обычные методы с телом             // - может иметь только объявления методов без тела
// - может иметь свойства                           // - не может иметь свойств
// - может иметь приватные и защищенные методы      // - может иметь только публичные методы
// - не поддерживает множественное наследование     // - поддерживает множественное наследование

// В PSR (https://www.php-fig.org/psr/) есть конкретные рекомендации по использованию интерфейсов (PSR-3, PSR-6,...)